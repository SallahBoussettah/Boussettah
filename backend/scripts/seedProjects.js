require("dotenv").config();
const { Project } = require("../models");

const sampleProjects = [
  {
    title: "Interactive Terminal Website",
    subtitle: "Web-Based Terminal Interface",
    slug: "interactive-terminal-website",
    description:
      "A unique personal website designed as an interactive terminal, featuring games, dynamic themes, and various commands.",
    longDescription:
      "A web-based terminal interface that simulates a command-line environment, featuring interactive games, customizable themes, and dynamic background effects. The project demonstrates modern web technologies while maintaining the classic terminal aesthetic. Features include a robust command system with history tracking, interactive games like Hangman and Number Guessing, multiple theme options, and dynamic background effects using Canvas API.",
    shortDescription:
      "Interactive terminal interface with games, themes, and command system.",
    category: "web",
    status: "on-hold",
    technologies: ["JavaScript", "HTML5", "CSS3", "Canvas API"],
    features: [
      "Command System",
      "Interactive Games",
      "Theme Customization",
      "Background Effects",
      "Version Management",
      "Cache Busting",
    ],
    challenges: [
      "Terminal Interface Implementation",
      "Version Management System",
      "Browser Caching",
      "Game Development",
      "Theme System",
    ],
    learnings: [
      "Vanilla JavaScript",
      "Modular Architecture",
      "Canvas API",
      "Local Storage",
      "Command Line Interfaces",
    ],
    liveUrl: "https://salah-projects.free.nf/project1/",
    featured: true,
    priority: 1,
    year: "2025",
    startDate: "2025-02-02",
    views: 150,
    likes: 35,
    isPublic: true,
    completionPercentage: 85,
    difficulty: "intermediate",
    teamSize: 1,
    duration: "2 months",
    tags: ["terminal", "javascript", "games", "interactive", "web"],
  },
  {
    title: "2D Platformer Adventure",
    subtitle: "Godot Engine Game",
    slug: "2d-platformer-adventure",
    description:
      "A challenging platformer game built with Godot Engine, featuring precise controls, atmospheric pixel art design, and progressively challenging levels.",
    longDescription:
      "A challenging 2D platformer game developed using the Godot Engine, featuring precise platforming mechanics and atmospheric level design. The game combines classic platforming elements with modern game design principles to create an engaging and challenging experience. Features smooth character controls, carefully crafted levels, pixel art aesthetics, and integrated audio systems.",
    shortDescription:
      "Challenging 2D platformer with precise controls and atmospheric design.",
    category: "game",
    status: "on-hold",
    technologies: ["Godot Engine", "GDScript", "Aseprite"],
    features: [
      "Player Movement",
      "Level Design",
      "Visual Style",
      "Audio System",
      "Collectible System",
      "Health System",
    ],
    challenges: [
      "Platforming Physics",
      "Level Design",
      "Performance Optimization",
      "Checkpoint Systems",
      "Collision Detection",
    ],
    learnings: [
      "Godot Development",
      "Game Physics",
      "Animation Systems",
      "Level Design",
      "Audio Integration",
    ],
    demoUrl: "https://youtube.com/watch?v=28gzr2MMPfQ",
    featured: true,
    priority: 2,
    year: "2024",
    startDate: "2024-11-08",
    views: 120,
    likes: 28,
    isPublic: true,
    completionPercentage: 70,
    difficulty: "advanced",
    teamSize: 1,
    duration: "4 months",
    tags: ["godot", "platformer", "2d", "game", "pixel-art"],
  },
  {
    title: "XO Game",
    subtitle: "Modern Tic-Tac-Toe with AI",
    slug: "xo-game",
    description:
      "A modern Tic-tac-toe implementation featuring AI opponents, multiple themes, and comprehensive statistics tracking, built with JavaFX.",
    longDescription:
      "A modern implementation of the classic Tic-tac-toe game developed using JavaFX, featuring an intelligent AI opponent, customizable themes, and a comprehensive statistics system. This project combines traditional gameplay with modern design principles and user experience features including multiple difficulty levels, theme system, sound system, and statistics tracking.",
    shortDescription: "Modern Tic-tac-toe with AI, themes, and statistics.",
    category: "game",
    status: "completed",
    technologies: ["Java 21", "JavaFX", "Maven", "FXML", "CSS"],
    features: [
      "AI Opponent",
      "Theme System",
      "Sound System",
      "Statistics Tracking",
      "Responsive UI",
      "Settings Management",
    ],
    challenges: [
      "AI Implementation",
      "Theme System",
      "Game State Management",
      "User Interface",
      "Audio System",
    ],
    learnings: [
      "JavaFX Development",
      "Minimax Algorithm",
      "Theme Architecture",
      "Java Preferences API",
      "Scene Graph",
    ],
    githubUrl: "https://github.com/SallahBoussettah/XO-Game",
    downloadUrl:
      "https://github.com/SallahBoussettah/XO-Game/releases/download/V1.0.0/XO-Game.exe",
    featured: true,
    priority: 3,
    year: "2025",
    startDate: "2025-02-14",
    endDate: "2025-02-15",
    views: 95,
    likes: 22,
    isPublic: true,
    completionPercentage: 100,
    difficulty: "intermediate",
    teamSize: 1,
    duration: "1 week",
    tags: ["java", "javafx", "game", "ai", "desktop"],
  },
  {
    title: "Stock-X E-commerce Template",
    subtitle: "React E-commerce Platform",
    slug: "stock-x-ecommerce",
    description:
      "A modern e-commerce platform built with React, TypeScript, and Tailwind CSS featuring responsive design, authentication system, product management, and comprehensive shopping experience.",
    longDescription:
      "A modern e-commerce template built with React and TypeScript, featuring a sophisticated responsive design, glassmorphism elements, and a comprehensive shopping experience. This project combines professional UI/UX principles with modern web development practices for a complete online shopping platform including authentication, product management, shopping cart, and order processing.",
    shortDescription: "Modern e-commerce platform with React and TypeScript.",
    category: "web",
    status: "completed",
    technologies: [
      "React 19.0",
      "TypeScript",
      "Redux Toolkit",
      "Tailwind CSS",
      "Framer Motion",
    ],
    features: [
      "Authentication System",
      "Product Management",
      "Shopping Cart",
      "Order Processing",
      "User Dashboard",
      "Wishlist",
      "Responsive Design",
    ],
    challenges: [
      "Responsive Design",
      "Authentication Flow",
      "State Management",
      "Checkout Process",
      "Performance Optimization",
    ],
    learnings: [
      "React 19",
      "TypeScript",
      "Redux Toolkit",
      "Tailwind CSS",
      "Mobile-First Design",
    ],
    githubUrl: "https://github.com/SallahBoussettah/Stock-X",
    liveUrl: "https://stock-x-app.netlify.app/",
    featured: true,
    priority: 4,
    year: "2025",
    startDate: "2025-03-04",
    endDate: "2025-03-05",
    views: 180,
    likes: 42,
    isPublic: true,
    completionPercentage: 100,
    difficulty: "advanced",
    teamSize: 1,
    duration: "2 days",
    tags: ["react", "typescript", "ecommerce", "tailwind", "redux"],
  },
  {
    title: "Modern Agency Portfolio Template",
    subtitle: "Interactive Agency Showcase",
    slug: "agency-portfolio-template",
    description:
      "A modern and interactive agency portfolio template built with React, TypeScript, and Tailwind CSS featuring smooth animations, responsive design, dark mode support, and comprehensive pages for showcasing creative work and services.",
    longDescription:
      "A sophisticated agency portfolio template designed for creative professionals, featuring elegant animations, responsive layouts, and comprehensive content presentation. This project combines modern UI/UX principles with advanced web development techniques to create an impressive online presence for agencies and freelancers including dynamic hero sections, portfolio showcase, services presentation, and blog system.",
    shortDescription:
      "Sophisticated agency portfolio with animations and modern design.",
    category: "web",
    status: "completed",
    technologies: [
      "React 18.0",
      "TypeScript",
      "Tailwind CSS",
      "Framer Motion",
      "GSAP",
    ],
    features: [
      "Dynamic Hero Sections",
      "Portfolio Showcase",
      "Services Presentation",
      "Blog System",
      "Dark/Light Mode",
      "Contact Form",
      "Smooth Animations",
    ],
    challenges: [
      "Page Transitions",
      "Responsive Design",
      "Dark Mode System",
      "Image Loading",
      "Interactive Components",
    ],
    learnings: [
      "Framer Motion",
      "GSAP",
      "Theme Provider",
      "Lazy Loading",
      "Accessibility",
    ],
    githubUrl: "https://github.com/SallahBoussettah/Agency",
    liveUrl: "https://agency-webapp.netlify.app/",
    featured: true,
    priority: 5,
    year: "2025",
    startDate: "2025-03-03",
    endDate: "2025-03-06",
    views: 165,
    likes: 38,
    isPublic: true,
    completionPercentage: 100,
    difficulty: "advanced",
    teamSize: 1,
    duration: "3 days",
    tags: ["react", "agency", "portfolio", "animations", "typescript"],
  },
  {
    title: "Hand-Drawn Portfolio Website",
    subtitle: "Artistic Web Experience",
    slug: "hand-drawn-portfolio",
    description:
      "A creative portfolio website featuring hand-drawn aesthetics, interactive animations, and a unique sketchbook-inspired interface built with Next.js and TypeScript.",
    longDescription:
      "A modern portfolio website built with Next.js 14 and TypeScript, featuring a unique hand-drawn aesthetic, interactive paper-like textures, and engaging SVG animations. This project combines artistic design elements with modern web development practices to create an immersive and personal browsing experience including hand-drawn UI elements, paper textures, and interactive components.",
    shortDescription:
      "Creative portfolio with hand-drawn aesthetics and SVG animations.",
    category: "web",
    status: "completed",
    technologies: [
      "Next.js 14",
      "TypeScript",
      "Tailwind CSS",
      "Framer Motion",
      "SVG Animations",
    ],
    features: [
      "Hand-Drawn UI Elements",
      "Paper Textures",
      "Interactive Components",
      "Portfolio Showcase",
      "Blog System",
      "Contact Form",
    ],
    challenges: [
      "Hand-Drawn Aesthetic",
      "SVG Animations",
      "Paper Texture System",
      "Navigation System",
      "Performance Optimization",
    ],
    learnings: [
      "Next.js 14",
      "SVG Path Animations",
      "Paper Textures",
      "Framer Motion",
      "TypeScript",
    ],
    githubUrl: "https://github.com/SallahBoussettah/Hand-Drawn",
    liveUrl: "https://hand-drawn.netlify.app/",
    featured: true,
    priority: 6,
    year: "2025",
    startDate: "2025-03-01",
    endDate: "2025-03-07",
    views: 140,
    likes: 32,
    isPublic: true,
    completionPercentage: 100,
    difficulty: "advanced",
    teamSize: 1,
    duration: "1 week",
    tags: ["nextjs", "hand-drawn", "svg", "animations", "creative"],
  },
  {
    title: "Sketchfolio - Interactive Art Portfolio",
    subtitle: "Hand-Drawn Animation Showcase",
    slug: "sketchfolio-interactive",
    description:
      "A modern interactive portfolio built with Next.js, TypeScript, and Anime.js featuring hand-drawn animations, interactive drawing experiences, paper physics simulations, and a comprehensive artwork gallery.",
    longDescription:
      "A modern interactive portfolio website featuring hand-drawn animations and interactive experiences. Built with Next.js and TypeScript, Sketchfolio combines artistic design with technical innovation to create an immersive showcase for creative work including drawing animations, interactive drawing tools, paper physics simulation, and artwork gallery.",
    shortDescription:
      "Interactive portfolio with hand-drawn animations and physics.",
    category: "web",
    status: "completed",
    technologies: [
      "Next.js 15.2",
      "React 19.0",
      "TypeScript",
      "Anime.js",
      "Matter.js",
    ],
    features: [
      "Drawing Animations",
      "Interactive Drawing",
      "Paper Physics Simulation",
      "Artwork Gallery",
      "Portfolio Projects",
      "Interactive Path Drawing",
    ],
    challenges: [
      "SVG Path Animations",
      "Responsive Design",
      "Physics Simulations",
      "Hand-Drawn Aesthetic",
      "Animation Performance",
    ],
    learnings: [
      "Anime.js",
      "Matter.js",
      "SVG Animations",
      "Physics Simulations",
      "Interactive Design",
    ],
    liveUrl: "https://sketchfolio.netlify.app/",
    featured: true,
    priority: 7,
    year: "2025",
    startDate: "2025-03-06",
    endDate: "2025-03-08",
    views: 125,
    likes: 29,
    isPublic: true,
    completionPercentage: 100,
    difficulty: "advanced",
    teamSize: 1,
    duration: "2 days",
    tags: ["nextjs", "interactive", "animations", "physics", "art"],
  },
  {
    title: "SaaS Dashboard Template",
    subtitle: "Modern Analytics Interface",
    slug: "saas-dashboard-template",
    description:
      "A modern dashboard template built with React, Material-UI, and Chart.js featuring interactive data visualization with mock data, theme customization, and a comprehensive admin interface design.",
    longDescription:
      "A modern SaaS dashboard template featuring a clean, professional design with interactive data visualization and comprehensive admin controls. Built with React and modern UI libraries, this frontend implementation uses mock data to showcase a realistic dashboard experience including dynamic dashboard, theme customization, user interface mockups, and analytics dashboard.",
    shortDescription:
      "Modern SaaS dashboard with data visualization and admin controls.",
    category: "web",
    status: "completed",
    technologies: [
      "React 18.0",
      "Material-UI",
      "Redux Toolkit",
      "Chart.js",
      "D3.js",
    ],
    features: [
      "Dynamic Dashboard",
      "Theme Customization",
      "User Interface",
      "Analytics Dashboard",
      "Widget System",
      "Data Tables",
    ],
    challenges: [
      "Mock Data Creation",
      "Responsive Dashboard",
      "Interactive Components",
      "User Experience",
      "Theme System",
    ],
    learnings: [
      "Material-UI",
      "Chart.js",
      "D3.js",
      "Dashboard Design",
      "Data Visualization",
    ],
    githubUrl: "https://github.com/SallahBoussettah/SaaS-Dashboard",
    liveUrl: "https://saas-dashboard-demo.netlify.app/",
    featured: false,
    priority: 8,
    year: "2025",
    startDate: "2025-03-03",
    endDate: "2025-03-17",
    views: 110,
    likes: 25,
    isPublic: true,
    completionPercentage: 100,
    difficulty: "intermediate",
    teamSize: 1,
    duration: "2 weeks",
    tags: ["react", "dashboard", "saas", "charts", "material-ui"],
  },
  {
    title: "NexusPlay Elite Gaming Platform",
    subtitle: "Browser-Based Gaming Hub",
    slug: "nexusplay-elite",
    description:
      "A modern browser-based gaming platform built with Next.js, React, and advanced web technologies that offers a curated collection of in-browser games, user profiles, and seamless gaming experiences without installations.",
    longDescription:
      "A comprehensive browser-based gaming platform that provides users with instant access to a diverse collection of games directly in their web browser. Built with Next.js and React, NexusPlay Elite combines sleek design with powerful functionality to create an engaging gaming hub including in-browser gaming, developer integration, user profiles, and game discovery.",
    shortDescription:
      "Browser-based gaming platform with curated game collection.",
    category: "web",
    status: "in-development",
    technologies: [
      "Next.js",
      "React",
      "TypeScript",
      "CSS Modules",
      "Local Storage API",
    ],
    features: [
      "In-Browser Gaming",
      "Developer Integration",
      "User Profiles",
      "Game Discovery",
      "Game Progress Tracking",
      "Performance Optimization",
    ],
    challenges: [
      "Game Embedding",
      "Performance Optimization",
      "Third-Party Integration",
      "Responsive Layouts",
      "State Persistence",
    ],
    learnings: [
      "Game Integration",
      "Performance Optimization",
      "Developer Portal",
      "Responsive Design",
      "Browser APIs",
    ],
    liveUrl: "https://nexusplay-elite.netlify.app/",
    featured: false,
    priority: 9,
    year: "2025",
    startDate: "2025-03-10",
    views: 85,
    likes: 18,
    isPublic: true,
    completionPercentage: 80,
    difficulty: "advanced",
    teamSize: 1,
    duration: "3 weeks",
    tags: ["nextjs", "gaming", "platform", "browser", "games"],
  },
  {
    title: "Tracky - Time Tracking Application",
    subtitle: "Full-Stack Productivity Tool",
    slug: "tracky-time-tracking",
    description:
      "A modern, full-stack time tracking application built with React, Tailwind CSS, and Supabase that helps users monitor and analyze their time usage across different activities, tasks, and projects.",
    longDescription:
      "A comprehensive time tracking application that enables users to monitor and optimize their productivity through detailed time analytics. Built with React and powered by Supabase, Tracky provides a seamless experience for recording, categorizing, and visualizing time spent on various activities including intuitive time tracking, project management, real-time synchronization, and detailed analytics.",
    shortDescription:
      "Full-stack time tracking with analytics and project management.",
    category: "web",
    status: "in-development",
    technologies: [
      "React",
      "Tailwind CSS",
      "Supabase",
      "PostgreSQL",
      "Chart.js",
    ],
    features: [
      "Intuitive Time Tracking",
      "Project Management",
      "Real-time Synchronization",
      "Detailed Analytics",
      "Custom Reporting",
      "Task Tagging",
    ],
    challenges: [
      "Time Tracking Interface",
      "Real-time Synchronization",
      "Data Visualizations",
      "Database Schema",
      "Time Calculations",
    ],
    learnings: [
      "Supabase",
      "Real-time Data",
      "Time Management",
      "Data Visualization",
      "PostgreSQL",
    ],
    liveUrl: "https://tracky.netlify.app/",
    featured: false,
    priority: 10,
    year: "2025",
    startDate: "2025-03-21",
    views: 75,
    likes: 16,
    isPublic: true,
    completionPercentage: 85,
    difficulty: "intermediate",
    teamSize: 1,
    duration: "1 week",
    tags: ["react", "supabase", "time-tracking", "productivity", "analytics"],
  },
  {
    title: "Wisey - AI Interview Practice Platform",
    subtitle: "AI-Powered Interview Preparation",
    slug: "wisey-interview-platform",
    description:
      "An advanced interview preparation platform powered by Next.js, React, and AI technologies that offers personalized mock interviews, real-time feedback, and detailed performance analytics for job seekers.",
    longDescription:
      "A modern AI-powered interview preparation platform designed to help job seekers practice and improve their interview skills. Built with Next.js and React, Wisey combines cutting-edge AI voice interaction with sophisticated feedback systems to create a realistic interview simulation environment including interactive voice interviews, custom interview generation, real-time transcription, and comprehensive feedback system.",
    shortDescription:
      "AI-powered interview practice with voice interaction and feedback.",
    category: "web",
    status: "completed",
    technologies: [
      "Next.js 15.2.3",
      "React 19.0.0",
      "TypeScript",
      "Firebase",
      "VAPI.ai SDK",
      "Google Gemini 2.0",
    ],
    features: [
      "Interactive Voice Interviews",
      "Custom Interview Generation",
      "Real-time Transcription",
      "Comprehensive Feedback System",
      "Performance Scoring",
      "Tech Stack Visualization",
    ],
    challenges: [
      "Voice Conversation Interfaces",
      "Real-time Transcription",
      "Analysis Algorithms",
      "Responsive UI",
      "Complex State Management",
    ],
    learnings: [
      "VAPI.ai Integration",
      "Google AI Processing",
      "Firebase Integration",
      "Voice Technology",
      "AI Analysis",
    ],
    liveUrl: "https://wisey-prep.vercel.app/",
    featured: true,
    priority: 11,
    year: "2025",
    startDate: "2025-03-17",
    endDate: "2025-03-29",
    views: 200,
    likes: 45,
    isPublic: true,
    completionPercentage: 100,
    difficulty: "advanced",
    teamSize: 1,
    duration: "12 days",
    tags: ["nextjs", "ai", "interview", "voice", "firebase"],
  },
  {
    title: "Ability System Prototype",
    subtitle: "Godot Game Mechanics Demo",
    slug: "ability-system-prototype",
    description:
      "A focused technical demo built with Godot Engine that implements a robust ability system with cooldown management and animation integration for 2D character gameplay.",
    longDescription:
      "A technical demonstration developed using the Godot Engine, focusing specifically on implementing an ability system with cooldown management. This prototype explores the implementation of character abilities in a 2D environment with proper animation handling and physics integration including ability system, UI feedback, animation integration, and physics-based dash.",
    shortDescription:
      "Technical demo of ability system with cooldown management.",
    category: "game",
    status: "completed",
    technologies: ["Godot Engine", "GDScript"],
    features: [
      "Ability System",
      "UI Feedback",
      "Animation Integration",
      "Physics-Based Dash",
      "Character Controller",
      "Visual Positioning",
    ],
    challenges: [
      "Ability Cooldown System",
      "Animation Integration",
      "Collision Detection",
      "Animation Transitions",
      "UI Elements",
    ],
    learnings: [
      "Godot Development",
      "Ability Systems",
      "Animation Control",
      "Physics Integration",
      "UI Design",
    ],
    demoUrl: "https://youtube.com/watch?v=EH-XeFPuvI4",
    featured: false,
    priority: 12,
    year: "2025",
    startDate: "2025-04-01",
    endDate: "2025-04-01",
    views: 65,
    likes: 14,
    isPublic: true,
    completionPercentage: 100,
    difficulty: "intermediate",
    teamSize: 1,
    duration: "1 day",
    tags: ["godot", "abilities", "prototype", "game-mechanics", "2d"],
  },
  {
    title: "RedM Stable NPC System",
    subtitle: "Server Management Script",
    slug: "redm-stable-system",
    description:
      "A comprehensive stable management system for RedM servers featuring interactive NPCs, horse purchasing, and a complete user interface with database integration.",
    longDescription:
      "A technical demonstration developed using the RedM framework for FiveM, focusing specifically on implementing an interactive stable system with NPC management. This script creates immersive stable interactions in the Red Dead Redemption 2 multiplayer environment including NPC system, UI feedback, animation integration, and database integration.",
    shortDescription:
      "RedM stable management system with NPCs and database integration.",
    category: "game",
    status: "in-development",
    technologies: ["RedM Framework", "Lua Language", "MySQL", "NUI System"],
    features: [
      "NPC System",
      "UI Feedback",
      "Animation Integration",
      "Database-Integrated",
      "Multiple Payment Methods",
      "Debug Toolkit",
    ],
    challenges: [
      "NPC Persistence",
      "Multiple Stable Locations",
      "Database Integration",
      "Concurrent Interactions",
      "Responsive UI",
    ],
    learnings: [
      "RedM Development",
      "Lua Programming",
      "Database Design",
      "NUI Development",
      "Server Scripting",
    ],
    demoUrl: "https://youtube.com/watch?v=zBTXrdnxp5c",
    featured: false,
    priority: 13,
    year: "2025",
    startDate: "2025-04-07",
    views: 55,
    likes: 12,
    isPublic: true,
    completionPercentage: 75,
    difficulty: "advanced",
    teamSize: 1,
    duration: "2 weeks",
    tags: ["redm", "lua", "npc", "database", "server"],
  },
  {
    title: "RedM Admin Teleport System",
    subtitle: "Server Administration Tool",
    slug: "redm-admin-teleport",
    description:
      "A secure and optimized admin teleportation system for RedM servers featuring a graphical user interface, predefined locations, and comprehensive admin-only commands for efficient server management.",
    longDescription:
      "A technical demonstration developed for the RedM framework, focusing specifically on implementing a secure and efficient admin teleportation system. This script provides server administrators with essential tools for world navigation while maintaining strict access control including admin control system, UI integration, position management, and coordinate precision.",
    shortDescription:
      "Secure admin teleportation system with GUI and access control.",
    category: "game",
    status: "completed",
    technologies: [
      "Lua Language",
      "RedM Framework",
      "NUI System",
      "ACE Permission System",
    ],
    features: [
      "Admin Control System",
      "UI Integration",
      "Position Management",
      "Coordinate Precision",
      "Location Presets",
      "Optimized Performance",
    ],
    challenges: [
      "Admin-Only Access Control",
      "Responsive UI",
      "Coordinate Precision",
      "Position System",
      "Server Security",
    ],
    learnings: [
      "ACE Permissions",
      "NUI Development",
      "Coordinate Handling",
      "Position Storage",
      "Server Security",
    ],
    demoUrl: "https://youtube.com/watch?v=q1FbtFZfPEE",
    featured: false,
    priority: 14,
    year: "2025",
    startDate: "2025-04-07",
    endDate: "2025-04-07",
    views: 45,
    likes: 10,
    isPublic: true,
    completionPercentage: 100,
    difficulty: "intermediate",
    teamSize: 1,
    duration: "1 day",
    tags: ["redm", "admin", "teleport", "lua", "server"],
  },
  {
    title: "1899RP Scripts Store",
    subtitle: "RedM Marketplace Platform",
    slug: "1899rp-scripts-store",
    description:
      "A specialized e-commerce platform for RedM scripts and modifications, featuring secure payment integration, license management, and an authentic Wild West-themed UI connecting script developers with server owners.",
    longDescription:
      "A comprehensive e-commerce platform developed for the RedM community, focusing specifically on creating a secure and optimized marketplace for Wild West roleplay scripts and modifications. This store connects talented developers with server administrators including payment integration, license management, user management, and product showcase.",
    shortDescription:
      "E-commerce marketplace for RedM scripts with payment integration.",
    category: "web",
    status: "completed",
    technologies: [
      "React.js",
      "Node.js",
      "Express.js",
      "TypeScript",
      "PostgreSQL",
      "Stripe API",
      "PayPal API",
    ],
    features: [
      "Payment Integration",
      "License Management",
      "User Management",
      "Product Showcase",
      "Western-Themed UI",
      "Developer Dashboard",
    ],
    challenges: [
      "Payment Processing",
      "Western-Themed UI",
      "License Management",
      "Database Structure",
      "File Management",
    ],
    learnings: [
      "Payment Gateways",
      "E-commerce Development",
      "License Systems",
      "TypeORM",
      "Digital Products",
    ],
    liveUrl: "https://1899rp.store",
    featured: true,
    priority: 15,
    year: "2025",
    startDate: "2025-04-17",
    endDate: "2025-04-18",
    views: 300,
    likes: 65,
    isPublic: true,
    completionPercentage: 100,
    difficulty: "advanced",
    teamSize: 1,
    duration: "2 days",
    tags: ["ecommerce", "redm", "marketplace", "payments", "typescript"],
  },
  {
    title: "RepoDigest - Codebase Analysis CLI",
    subtitle: "Developer Tool for AI Integration",
    slug: "repodigest-cli",
    description:
      "Advanced CLI tool that transforms any codebase into intelligent, LLM-ready text digests with smart filtering, multiple output formats, and detailed analytics.",
    longDescription:
      "A powerful command-line tool engineered to revolutionize how developers interact with codebases in the AI era. RepoDigest transforms any Git repository or local directory into comprehensive, structured digests optimized for Large Language Models including multi-format output, smart file analysis, flexible filtering, and rich analytics.",
    shortDescription:
      "CLI tool for converting codebases into LLM-ready digests.",
    category: "tool",
    status: "in-development",
    technologies: [
      "Node.js 18+",
      "TypeScript",
      "Commander.js",
      "Fast-glob",
      "Tiktoken",
    ],
    features: [
      "Multi-Format Output",
      "Smart File Analysis",
      "Flexible Filtering",
      "Rich Analytics",
      "Interactive Configuration",
      "Git Integration",
    ],
    challenges: [
      "Binary File Detection",
      "File Traversal Performance",
      "Pattern Matching",
      "Token Estimation",
      "Git Operations",
    ],
    learnings: [
      "CLI Development",
      "File System Analysis",
      "TypeScript",
      "Git Integration",
      "Token Counting",
    ],
    githubUrl: "https://github.com/SallahBoussettah/repodigest",
    featured: false,
    priority: 16,
    year: "2025",
    startDate: "2025-07-23",
    views: 40,
    likes: 8,
    isPublic: true,
    completionPercentage: 85,
    difficulty: "advanced",
    teamSize: 1,
    duration: "1 week",
    tags: ["cli", "nodejs", "typescript", "ai", "developer-tools"],
  },
  {
    title: "ReadWise+ Mobile App",
    subtitle: "AI-Powered Reading Companion",
    slug: "readwise-mobile-app",
    description:
      "A beautiful, feature-rich React Native mobile app that transforms how users track their reading journey, collect memorable quotes, and discover new books through AI-powered recommendations.",
    longDescription:
      "A sophisticated mobile reading companion engineered to revolutionize personal library management and reading discovery in the digital age. ReadWise+ combines elegant design with powerful functionality to create an immersive reading experience including smart book management, instant book discovery, quote collection system, and AI-powered recommendations.",
    shortDescription:
      "React Native reading app with AI recommendations and quote collection.",
    category: "mobile",
    status: "in-development",
    technologies: [
      "React Native 0.74",
      "Expo SDK 51.0",
      "TypeScript",
      "AsyncStorage",
      "Google Books API",
      "Google Gemini AI",
    ],
    features: [
      "Smart Book Management",
      "Instant Book Discovery",
      "Quote Collection System",
      "AI-Powered Recommendations",
      "Beautiful Design System",
      "Privacy-First Architecture",
    ],
    challenges: [
      "Offline-First Data Persistence",
      "Responsive UI Components",
      "API Integration",
      "Secure Local Storage",
      "Cross-Platform Compatibility",
    ],
    learnings: [
      "React Native",
      "Expo Development",
      "Mobile UI/UX",
      "AI Integration",
      "Offline Storage",
    ],
    githubUrl: "https://github.com/SallahBoussettah/readwise-mobile",
    demoUrl: "https://expo.dev/accounts/sato_san/projects/readwise-plus",
    featured: true,
    priority: 17,
    year: "2025",
    startDate: "2025-07-28",
    views: 90,
    likes: 20,
    isPublic: true,
    completionPercentage: 90,
    difficulty: "advanced",
    teamSize: 1,
    duration: "2 weeks",
    tags: ["react-native", "mobile", "ai", "books", "expo"],
  },
];

const seedProjects = async () => {
  try {
    console.log("💼 Seeding projects...");

    // Connect to database
    const { sequelize } = require("../config/database");
    await sequelize.authenticate();
    console.log("📡 Database connected successfully");

    // Clear existing projects
    await Project.destroy({ where: {} });

    // Insert sample projects
    await Project.bulkCreate(sampleProjects);

    console.log("✅ Projects seeded successfully!");
    console.log(`🚀 Added ${sampleProjects.length} projects`);
  } catch (error) {
    console.error("❌ Error seeding projects:", error);
    throw error;
  } finally {
    const { sequelize } = require("../config/database");
    await sequelize.close();
  }
};

// Run if called directly
if (require.main === module) {
  seedProjects()
    .then(() => {
      console.log("🎉 Projects seeding completed");
      process.exit(0);
    })
    .catch((error) => {
      console.error("💥 Projects seeding failed:", error);
      process.exit(1);
    });
}

module.exports = seedProjects;
